apiVersion: flows.netobserv.io/v1beta1
kind: FlowCollector
metadata:
  name: "cluster"
spec:
  namespace: "netobserv"
  deploymentModel: DIRECT
  agent:
    ebpf:
      excludeInterfaces:
        - lo
      imagePullPolicy: IfNotPresent
      interfaces: []
      logLevel: info
      privileged: {{ netobserv_config_agent_privileged | default(dnetobserv_config_agent_privileged) }}
      resources:
        limits:
          memory: "{{ netobserv_config_agent_limits_memory | default(dnetobserv_config_agent_limits_memory) }}"
        requests:
          cpu: "{{ netobserv_config_agent_cpu | default(dnetobserv_config_agent_cpu) }}"
          memory: "{{ netobserv_config_agent_memory | default(dnetobserv_config_agent_memory) }}"
      sampling: {{ netobserv_config_sampling | default(dnetobserv_config_sampling) }}
    type: EBPF
  consolePlugin:
    autoscaler:
      maxReplicas: {{ netobserv_config_console_max_replicas | default(dnetobserv_config_console_max_replicas) }}
      metrics:
        - resource:
            name: cpu
            target:
              averageUtilization: {{ netobserv_config_console_avg_utilization | default(dnetobserv_config_console_avg_utilization) }}
              type: Utilization
          type: Resource
      minReplicas: 1
    enable: true
    imagePullPolicy: IfNotPresent
    logLevel: info
    port: 9001
    portNaming:
      enable: true
      portNames:
        "3100": loki
    quickFilters:
      - default: true
        filter:
          dst_namespace!: openshift-,netobserv
          src_namespace!: openshift-,netobserv
        name: Applications
      - filter:
          dst_namespace: openshift-,netobserv
          src_namespace: openshift-,netobserv
        name: Infrastructure
      - default: true
        filter:
          dst_kind: Pod
          src_kind: Pod
        name: Pods network
      - filter:
          dst_kind: Service
        name: Services network
    register: true
    replicas: 1
    resources:
      limits:
        memory: "{{ netobserv_config_console_limits_memory | default(dnetobserv_config_console_limits_memory) }}"
      requests:
        cpu: "{{ netobserv_config_console_cpu | default(dnetobserv_config_console_cpu) }}"
        memory: "{{ netobserv_config_console_memory | default(dnetobserv_config_console_memory) }}"
  loki:
    authToken: FORWARD
    statusUrl: "https://netobserv-loki-query-frontend-http.netobserv.svc:3100/"
    tenantID: network
    timeout: 10s
    tls:
      caCert:
        certFile: service-ca.crt
        name: netobserv-loki-gateway-ca-bundle
        namespace: "netobserv"
        type: configmap
      enable: true
      insecureSkipVerify: {{ netobserv_config_loki_tls_insecure_skip_verify | default(dnetobserv_config_loki_tls_insecure_skip_verify) }}
      userCert:
        namespace: "netobserv"
    url: "https://netobserv-loki-gateway-http.netobserv.svc:8080/api/logs/v1/{{ netobserv_config_bucket | default(dnetobserv_config_bucket) }}"
  processor:
    conversationHeartbeatInterval: 30s
    debug: {}
    healthPort: 8080
    imagePullPolicy: IfNotPresent
    logLevel: info
    logTypes: FLOWS
    metrics:
      disableAlerts: []
      ignoreTags:
        - egress
        - packets
        - nodes-flows
        - namespaces-flows
        - workloads-flows
        - namespaces
      server:
        port: 9102
        tls:
          insecureSkipVerify: {{ netobserv_config_loki_tls_insecure_skip_verify | default(dnetobserv_config_loki_tls_insecure_skip_verify) }}
          type: DISABLED
    port: 2055
    profilePort: 6060
    resources:
      limits:
        memory: "{{ netobserv_config_processor_limits_memory | default(dnetobserv_config_processor_limits_memory) }}"
      requests:
        cpu: "{{ netobserv_config_processor_cpu | default(dnetobserv_config_processor_cpu) }}"
        memory: "{{ netobserv_config_processor_memory | default(dnetobserv_config_processor_memory) }}"
